<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.it_3st_3team.dao.AdminDao">
	<resultMap type="Admin" id="AdminBasedResult">
		<id property="adminNo" column="adm_no" />
		<result property="adminId" column="adm_id" />
		<result property="adminName" column="adm_name" />
		<result property="adminPwd" column="adm_pwd" />
		<result property="phone" column="adm_phone" />
		<result property="avatar" column="adm_avatar" />
	</resultMap>
	
	<resultMap type="Admin" id="AdminWithAdminGroupResult" extends="AdminBasedResult">
		<result property="adminGroup.agNo" column="ag_no"/>
		<result property="adminGroup.agName" column="ag_name"/>
		<result property="adminGroup.agAuth" column="ag_auth"/>
	</resultMap>
	
	<!-- Admin 기본 정보 -->
	<sql id="selectSql">
		select adm_no, adm_name, adm_id, adm_pwd, adm_phone, ag_no from admin
	</sql>
	
	<!-- Admin with Admin_group 정보 -->
	<sql id="selectWtihAdminGroupSql">
		select ad.adm_no, ad.adm_name, ad.adm_id, ad.adm_pwd, ad.adm_phone, adm_avatar, ad.ag_no, ag.ag_name, ag.ag_auth from admin ad 
		join admin_group ag on ag.ag_no=ad.ag_no
	</sql>
	
	
	
	<sql id="whereLoginSql">
		where ad.adm_id = #{adminId} AND ad.adm_pwd = password(#{adminPwd})
	</sql>
	
	<sql id="whereSql">
		<where>
			<if test="adminNo != null and adminNo > 0">
				adm_no = #{adminNo}
			</if>
			<if test="adminId != null and !adminId.equals('')">
				adm_id = #{adminId}
			</if>
		</where>
	</sql>
	
	<select id="selectAdminByLogin" parameterType="Admin" resultMap="AdminWithAdminGroupResult">
		<include refid="selectWtihAdminGroupSql"/>
		<include refid="whereLoginSql"/>
	</select>
	
	<select id="selectAdminByNo" parameterType="Admin" resultMap="AdminWithAdminGroupResult">
		<include refid="selectWtihAdminGroupSql" />
		<include refid="whereSql" />
	</select>
	
	<select id="selectAdminById" parameterType="Admin" resultMap="AdminBasedResult">
		<include refid="selectSql" />
		<include refid="whereSql" />
	</select>
	
	<select id="selectAdminAll" parameterType="Admin" resultMap="AdminWithAdminGroupResult">
		<include refid="selectWtihAdminGroupSql" />
	</select>
	
	<select id="selectAdminBySearch" parameterType="Admin" resultMap="AdminWithAdminGroupResult">
		<include refid="selectWtihAdminGroupSql" />
		<where>
			<choose>
				<when test="searchBy == 'id'">
					adm_id like CONCAT(#{searchText}, "%")
				</when>
				<when test="searchBy == 'name'">
					adm_name like CONCAT(#{searchText}, "%")
				</when>
				<when test="searchBy == 'agName'">
					ag_name like CONCAT(#{searchText}, "%")
				</when>
			</choose>
		</where>
	</select>

	<insert id="insertAdmin" parameterType="Admin">
		<selectKey resultType="integer" keyProperty="adminNo" order="BEFORE">
			select max(adm_no)+1 from admin;
		</selectKey>
		insert into admin(adm_no, adm_id, adm_pwd, adm_name, adm_phone, adm_avatar, ag_no) values
		(#{adminNo}, #{adminId},password(#{adminPwd}), #{adminName}, #{phone}, #{avatar}, #{adminGroup.agNo});
	</insert>
	
	<sql id="updateSql">
		update admin
		<set>
			<if test="adminPwd != null">
				adm_pwd = password(#{adminPwd}),
			</if>
			<if test="adminName != null">
				adm_name = #{adminName},
			</if>
			<if test="phone != null">
				adm_phone = #{phone},
			</if>
			<if test="avatar != null">
				adm_avatar = #{avatar},
			</if>
			<if test="adminGroup != null">
				ag_no = #{adminGroup.agNo},
			</if>
		</set>
	</sql>
	
	<update id="updateAdmin" parameterType="Admin">
		<include refid="updateSql" />
		<include refid="whereSql" />
	</update>
	
	<delete id="deleteAdmin" parameterType="Admin">
		delete from admin where adm_no = #{adminNo}
	</delete>
</mapper>