<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.it_3st_3team.dao.SaleOrderDao">

	<resultMap type="SaleOrder" id="SaleOrderResult">
		<id property="ordNo" column="ord_no"/>
		<result property="ordQuantity" column="ord_quantity"/>
		<result property="ordSupplyPrice" column="ord_supply_price"/>
		<result property="ordSellPrice" column="ord_sell_price"/>
		<result property="ordTax" column="ord_tax"/>
		<result property="ordSellProfit" column="ord_sell_profit"/>
		<result property="ordPayment" column="ord_payment"/>
		<result property="ordDatetime" column="ord_datetime"/>
	</resultMap>
	
	<resultMap type="SaleOrder" id="selectSaleOrderWithAll" extends="SaleOrderResult">
		<result property="user.userNo" column="u_no" />
		<result property="user.companyNo" column="pc_no" />
		<result property="user.userId" column="u_id" />
		<result property="user.name" column="고객명" />
		<result property="user.nameCu" column="공급회사명" />
		<result property="software.swNo" column="sw_no" />
		<result property="software.swName" column="sw_name" />
		<result property="software.swCoverImg" column="sw_cover_img"/>
		<result property="admin.adminNo" column="adm_no" />
		<result property="admin.adminId" column="adm_id" />
		<result property="admin.adminName" column="adm_name" />
		<result property="software.swGroup.sgName" column="sg_name" />
	</resultMap>
	
	<!-- SaleOrder 기본 Select -->
	<sql id="saleOrderSql">
	select ord_no, u_no, sw_no, ord_quantity, ord_supply_price, 
	ord_sell_price, ord_tax, ord_sell_profit, ord_payment, ord_datetime, adm_no
	from sale_order
	</sql>
	
	<!-- SaleOrder 현황관리 관리자 조건검색 -->
	<sql id="selectParameterSql">
	select us.u_group as '고객타입', us.u_name as '고객명', cu.u_group as '공급타입', cu.u_name as '공급회사명',
	so.ord_no, ad.adm_name, sg.sg_name, sp.sw_name, sp.sw_cover_img, so.ord_quantity,
	so.ord_supply_price, so.ord_sell_price, so.ord_tax, so.ord_sell_profit,
	so.ord_payment,so.ord_datetime, ad.adm_name 
	from sale_order as so 
	join software as sp on so.sw_no=sp.sw_no
	join software_group as sg on sp.sg_no=sg.sg_no
	join admin as ad on so.adm_no=ad.adm_no
	join user as us on so.u_no=us.u_no
	join user as cu on sp.pc_no=cu.u_no
	</sql>
	
	<!-- 관리자차트 품목별 갯수 조건:년도 -->
	<select id="selectSwGroupForYears" parameterType="map" resultType="map">
	select t.sg_name as name, ifnull(sum(ord_quantity),0) as count
	from (select sw.*, sg_name from software sw right join software_group sg  on sg.sg_no=sw.sg_no) as t
    left join (select * from sale_order where ord_datetime like CONCAT(#{date},"%")) as so on so.sw_no = t.sw_no
	group by t.sg_name
	union
	select '총합', sum(ord_quantity)
	from sale_order so join admin ad on so.adm_no = ad.adm_no
	where so.ord_datetime like CONCAT(#{date},"%")
	</select>
	
	<!-- 영업사원차트 품목별 갯수 조건 -->
	<select id="selectSwGroupBySales" parameterType="map" resultType="map">
	select t.sg_name as name, ifnull(sum(ord_quantity),0) as count
	from (select sw.*, sg_name from software sw right join software_group sg  on sg.sg_no=sw.sg_no) as t
    left join (select * from sale_order where ord_datetime like CONCAT(#{date},"%") and adm_no=#{adminNo}) as so on so.sw_no = t.sw_no
	group by t.sg_name
	union
	select '총합', sum(ord_quantity)
	from sale_order 
	where adm_no=#{adminNo}
    and ord_datetime like CONCAT(#{date},"%")
	</select>
	
	<!-- 고객차트 품목별 갯수 조건 -->
	<select id="selectSwGroupByCustomer" parameterType="map" resultType="map">
	select t.sg_name as name, ifnull(sum(ord_quantity),0) as count
	from (select sw.*, sg_name from software sw right join software_group sg  on sg.sg_no=sw.sg_no) as t
    left join (select * from sale_order where ord_datetime like CONCAT(#{date},"%") and u_no=#{userNo}) as so on so.sw_no = t.sw_no
	group by t.sg_name
	union
	select '총합', sum(ord_quantity)
	from sale_order 
	where u_no=#{userNo}
    and ord_datetime like CONCAT(#{date},"%")
	</select>
	
	<!-- 공급회사차트 품목별 갯수 조건:공급회사 -->
	<select id="selectSwGroupByCompany" parameterType="map" resultType="map">
	select sg.sg_name as name, ifnull(sum(so.ord_quantity),0) as count
	from software_group sg left join software sw on sg.sg_no=sw.sg_no 
    left join (select sw.sw_no,so.ord_quantity from software sw 
    left join sale_order so on sw.sw_no = so.sw_no where pc_no = #{companyNo} and so.ord_datetime like CONCAT(#{date},"%")) so on so.sw_no=sw.sw_no
	group by sg.sg_name
	union
	select '총합', sum(ord_quantity)
	from sale_order so join software sw on so.sw_no=sw.sw_no
	where sw.pc_no=#{companyNo}
	and so.ord_datetime like CONCAT(#{date},"%")
	</select>
	
	<!-- 관리자차트 결제타입 -->
	<select id="selectPaymentChartByAdmin" parameterType="map" resultType="map">
	select ifnull(ord_payment, 'SIMPLE') as payment, ifnull(count(ord_quantity),0) as count
	from (select sw.*, sg_name from software sw right join software_group sg  on sg.sg_no=sw.sg_no) as t
    left join (select * from sale_order where ord_datetime like CONCAT(#{date},"%")) as so on so.sw_no = t.sw_no
	group by ord_payment
	union
	select '총합', count(ord_quantity)
	from sale_order 
	where ord_datetime like CONCAT(#{date},"%")
	</select>
	
	<!-- 영업사원차트 결제타입 -->
	<select id="selectPaymentChartBySales" parameterType="map" resultType="map">
	select ifnull(ord_payment, 'SIMPLE') as payment, ifnull(count(ord_quantity),0) as count
	from (select sw.*, sg_name from software sw right join software_group sg  on sg.sg_no=sw.sg_no) as t
    left join (select * from sale_order where ord_datetime like CONCAT(#{date},"%") and adm_no=#{adminNo}) as so on so.sw_no = t.sw_no
	group by ord_payment
	union
	select '총합', count(ord_quantity)
	from sale_order 
	where adm_no=#{adminNo}
    and ord_datetime like CONCAT(#{date},"%")
	</select>
	
	<!-- SaleOrder 주문 삭제 -->
	<sql id="deleteSql">
		delete from sale_order
	</sql>
	
	<!-- SaleOrder Where조건 주문번호만-->
	<sql id="whereSql">
		<where>
			<if test="ordNo != null">
				ord_no = #{ordNo}
			</if>
		</where>
	</sql>
	
	<!-- 관리자 현황관리 Where 모든조건 -->
	<sql id="whereSwNameSql">
		<where>
			<if test="sgName != null and sgName != ''">
				sg_name = #{sgName}
			</if>
			<if test="adminName != null and adminName != ''" >
				and adm_name = #{adminName}
			</if>
			<if test="startDate != null and startDate != ''">
				and ord_datetime &gt;= #{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				and ord_datetime &lt;= CONCAT(#{endDate}," 23:59:59")
			</if>
				<choose>
					<when test="searchBy=='customer' and name != ''">
						and us.u_name = #{name} and us.u_group = 'CUSTOMER'
					</when>
					<when test="searchBy=='company' and name != ''">
						and cu.u_name = #{name} and cu.u_group = 'COMPANY'
					</when>
					<when test="searchBy=='softwarename' and name != ''">
						and sw_name = #{name}
					</when>
				</choose>
		</where>
	</sql>
	
	
	<!-- 차트 품목별 갯수  -->
	<sql id="whereSwNameSqlChart">
		<where>
			<if test="adminName != null" >
				adm_name = #{adminName}
			</if>
			<if test="date != null">
				and ord_datetime like CONCAT(#{date},"%")
			</if>	
		</where>
	</sql>
	
	<sql id="whereUserSql">
		<where>
			<choose>
				<when test="userId != null and userId != ''">
					us.u_id = #{userId}
				</when>
				<when test="comId != null and comId != ''">
					cu.u_id = #{comId}
				</when>
				<when test="adminId != null and adminId != ''">
					ad.adm_id = #{adminId}
				</when>
			</choose>
		</where>
	</sql>
	
	<select id="selectSaleOrderByNo" parameterType="SaleOrder" resultMap="selectSaleOrderWithAll">
		<include refid="selectParameterSql"/>
		<include refid="whereSql"/>
		
	</select>

	<!-- 총관리자 -->
	<select id="selectSaleOrderWithAllBySearch" parameterType="Map" resultMap="selectSaleOrderWithAll">
		<include refid="selectParameterSql"/>
		<include refid="whereSwNameSql"/>
		order by ord_datetime desc
	</select>
	
	<!-- 모든List -->
	<select id="selectSaleOrderByAll" resultMap="selectSaleOrderWithAll">
		<include refid="selectParameterSql"/>
		order by ord_datetime desc
	</select>
	
	<select id="selectSaleOrderAllByType" parameterType="Map" resultMap="selectSaleOrderWithAll">
		<include refid="selectParameterSql"/>
		<include refid="whereUserSql"/>
		order by ord_datetime desc
	</select>
	
	<!-- 수정 -->
	<sql id="updateSql">
		update sale_order set ord_quantity=#{ordQuantity},ord_payment=#{ordPayment}
	</sql>
	<update id="updateOrderManagementNo" parameterType="SaleOrder">
		<include refid="updateSql"/>
		<include refid="whereSql"/>
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteSaleOrderByNo" parameterType="SaleOrder">
		<include refid="deleteSql"/>
		<include refid="whereSql"/>
	</delete>
	

</mapper>