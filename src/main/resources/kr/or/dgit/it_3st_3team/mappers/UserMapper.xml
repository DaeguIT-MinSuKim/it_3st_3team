<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.it_3st_3team.dao.UserDao">
	<resultMap type="User" id="UserBasedResult">
		<id property="userNo" column="u_no" />
		<result property="userId" column="u_id" />
		<result property="userPwd" column="u_pwd" />
		<result property="name" column="u_name" />
		<result property="email" column="u_email" />
		<result property="phone" column="u_phone" />
		<result property="zipcode" column="u_zipcode" />
		<result property="addr1" column="u_addr1" />
		<result property="addr2" column="u_addr2" />
		<result property="avatar" column="u_avatar" />
		<result property="userGroup" column="u_group" />
	</resultMap>
	
	<resultMap type="User" id="UserWithAdminResult" extends="UserBasedResult">
		<result property="admin.adminNo" column="adm_no" />
		<result property="admin.adminId" column="adm_id" />
		<result property="admin.adminName" column="adm_name" />
	</resultMap>
	
	<!-- USER 기본 정보 -->
	<sql id="selectSql">
		select u_no, u_id, u_pwd, u_name, u_email, u_phone, u_zipcode, u_addr1, u_addr2, u_avatar, u_group, adm_no
		from user
	</sql>
	
	<!-- USER with ADMIN 정보까지 -->
	<sql id="selectWithAdminSql">
		select u_no, u_id, u_pwd, u_name, u_email, u_phone, u_zipcode, u_addr1, u_addr2, u_avatar, u_group, u.adm_no, a.adm_id, a.adm_name
		from user u 
		left join admin a on u.adm_no = a.adm_no
	</sql>
	
	<sql id="selectLastNo">
		select max(u_no) as last_id from user;
	</sql>


	<sql id="whereByNoSql">
		where u_no = #{userNo}
	</sql>
	
	<sql id="whereByIdSql">
		where u_id = #{userId}
	</sql>

	<sql id="whereSql">
		<where>
			<if test="userId != null and userId != ''">
				u_id = #{userId}
			</if>
			<if test="userNo != null and userNo > 0">
				AND u_no = #{userNo}
			</if>
		</where>
	</sql>
	
	<!-- User no 로 검색 -->
	<select id="selectUserByNo" parameterType="User" resultMap="UserWithAdminResult">
		<include refid="selectWithAdminSql" />
		<include refid="whereByNoSql" />
	</select>
	
	<!-- User Id 로 검색 -->
	<select id="selectUserById" parameterType="User" resultMap="UserWithAdminResult">
		<include refid="selectWithAdminSql" />
		<include refid="whereByIdSql" />
	</select>
	
	<!-- 모든 User 검색 -->
	<select id="selectUserAll" resultMap="UserWithAdminResult">
		<include refid="selectWithAdminSql" />
		order by u_no desc
	</select>
	
	<!-- User group 별 검색 -->
	<select id="selectUserAllByUserGroup" parameterType="UserGroup" resultMap="UserWithAdminResult">
		<include refid="selectWithAdminSql" />
		where u.u_group = #{userGroup}
	</select>

	<sql id="whereSearchSql">
		<where>
			<choose>
				<when test="searchBy == 'id'">
					u_id like CONCAT(#{searchText}, "%")
				</when>
				<when test="searchBy == 'name'">
					u_name like CONCAT(#{searchText}, "%")
				</when>
				<when test="searchBy == 'phone'">
					u_phone = #{searchText}
				</when>
			</choose>
		</where>
	</sql>
	
	<!-- 검색어에 따른 user 검색 -->
	<select id="selectUserBySearch" parameterType="map" resultMap="UserWithAdminResult">
		<include refid="selectWithAdminSql" />
		<include refid="whereSearchSql" />
		order by u_no desc
	</select>
	
	<select id="selectUserByFindId" parameterType="User" resultMap="UserBasedResult">
		<include refid="selectWithAdminSql" />
		where u_name = #{name} and u_email = #{email}
	</select>
	
	<select id="selectUserByFindPw" parameterType="User" resultMap="UserBasedResult">
		<include refid="selectWithAdminSql" />
		where u_id = #{userId} and u_phone = #{phone} and u_email = #{email}
	</select>

	<!-- Login 시 User 검색 -->
	<sql id="whereLoginSql">
		where u_id = #{userId} and u_pwd = password(#{userPwd})
	</sql>
	
	<select id="selectUserByLogin" parameterType="User" resultMap="UserWithAdminResult">
		<include refid="selectWithAdminSql" />
		<include refid="whereLoginSql" />
	</select>
	
	<sql id="insertSql">
		insert into user(u_no, u_id, u_pwd, u_name, u_email, u_phone, u_zipcode, u_addr1, u_addr2, u_avatar, u_group, adm_no) values
		(#{userNo}, #{userId},password(#{userPwd}), #{name}, #{email}, #{phone}, #{zipcode}, #{addr1}, #{addr2}, #{avatar}, #{userGroup.value}, #{admin.adminNo});
	</sql>
	
	<!-- User 마지막 no + 1 후 insert -->
	<insert id="insertUser" parameterType="User">
		<selectKey resultType="integer" keyProperty="userNo" order="BEFORE">
			select max(u_no)+1 from user;
		</selectKey>
		<include refid="insertSql" />
	</insert>
	
	<sql id="updateSql">
		update user
		<set>
			<if test="userPwd != null">
				u_pwd = password(#{userPwd}),
			</if>
			<if test="name != null">
				u_name = #{name},
			</if>
			<if test="email != null">
				u_email = #{email},
			</if>
			<if test="phone != null">
				u_phone = #{phone},
			</if>
			<if test="zipcode != null">
				u_zipcode = #{zipcode},
			</if>
			<if test="addr1 != null">
				u_addr1 = #{addr1},
			</if>
			<if test="addr2 != null">
				u_addr2 = #{addr2},
			</if>
			<if test="avatar != null">
				u_avatar = #{avatar},
			</if>
			<if test="userGroup != null">
				u_group = #{userGroup.value},
			</if>
			<if test="admin != null">
				adm_no = #{admin.adminNo},
			</if>
		</set>
	</sql>
	
	<!-- 업데이트 User -->
	<update id="updateUser" parameterType="User">
		<include refid="updateSql" />
		<include refid="whereByIdSql" />
	</update>
	
	<!-- 비밀번호 업데이트 User -->
	<update id="updateUserPassword" parameterType="map">
		update user set u_pwd = password(#{newPwd})
		<include refid="whereLoginSql" />
	</update>
	
	<!-- 삭제 User -->
	<delete id="deleteUser" parameterType="User">
		delete from user 
		<include refid="whereSql" />
	</delete>
</mapper>