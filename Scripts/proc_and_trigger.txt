

DROP PROCEDURE IF EXISTS software_project.proc_insert_sale_order ;

DELIMITER $$
$$
CREATE PROCEDURE `software_project`.`proc_insert_sale_order`(
	in P_ORD_QUANTITY int,
	in P_ORD_PAYMENT varchar(20),
	in P_SW_NO int,
	in P_U_NO int
)
BEGIN
	DECLARE p_ord_no int;
	DECLARE sw_supply_price int;
	DECLARE sw_sell_price int;
	DECLARE admin_no int;
	
	select MAX(ord_no)+1 into p_ord_no
	from sale_order ;
	
	select s.sw_supply_price, s.sw_sell_price, u.adm_no into sw_supply_price, sw_sell_price, admin_no 
	from software s join user u on s.pc_no = u.u_no 
	where s.sw_no = P_SW_NO;

	set @ord_supply_price = sw_supply_price * P_ORD_QUANTITY;
	set @ord_sell_price = sw_sell_price * P_ORD_QUANTITY;
	set @ord_sell_profit = @ord_sell_price - @ord_supply_price;
	set @ord_tax = (@ord_sell_price * 10) / 100;
	
	insert into sale_order(ord_no, u_no, sw_no, ord_quantity, ord_supply_price, ord_sell_price,
						ord_tax, ord_sell_profit, ord_payment, ord_datetime, adm_no)
	values (p_ord_no, P_U_NO, P_SW_NO, P_ORD_QUANTITY, @ord_supply_price, @ord_sell_price, @ord_tax, @ord_sell_profit,
			P_ORD_PAYMENT, now(), admin_no);

	update software set sw_quantity = (sw_quantity - P_ORD_QUANTITY) where sw_no = P_SW_NO;
END $$
DELIMITER ;



DROP PROCEDURE IF EXISTS software_project.proc_update_sale_order ;

DELIMITER $$
$$
CREATE PROCEDURE `software_project`.`proc_update_sale_order`(
	in P_ORD_NO int,
	in P_ORD_QUANTITY int,
	in P_ORD_PAYMENT varchar(20)
)
BEGIN
	DECLARE sw_supply_price int;
	DECLARE sw_sell_price int;

	select s.sw_supply_price, s.sw_sell_price  into sw_supply_price, sw_sell_price
	from software s join sale_order so on s.sw_no = so.sw_no 
	where so.ord_no = P_ORD_NO;

	set @ord_supply_price = sw_supply_price * P_ORD_QUANTITY;
	set @ord_sell_price = sw_sell_price * P_ORD_QUANTITY;
	set @ord_sell_profit = @ord_sell_price - @ord_supply_price;
	set @ord_tax = (@ord_sell_price * 10) / 100;

	update sale_order set
	ord_quantity = P_ORD_QUANTITY,
	ord_supply_price = @ord_supply_price,
	ord_sell_price = @ord_sell_price,
	ord_tax = @ord_tax,
	ord_sell_profit= @ord_sell_profit,
	ord_payment = P_ORD_PAYMENT
	where ord_no = P_ORD_NO;
END $$
DELIMITER ;



DROP TRIGGER IF EXISTS software_project.tri_admin_before_delete_user_update ;

DELIMITER $$
$$
CREATE TRIGGER software_project.tri_admin_before_delete_user_update
BEFORE DELETE
ON software_project.admin FOR EACH ROW
update `user` set adm_no = 1 where adm_no = old.adm_no $$
DELIMITER ;
